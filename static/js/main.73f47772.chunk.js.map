{"version":3,"sources":["components/Header.tsx","utils/getRandomQuote.ts","components/QuoteComponent.tsx","App.tsx","index.tsx"],"names":["Header","className","getRandomQuote","a","axios","get","response","data","randomQuote","Math","floor","random","length","undefined","QuoteComponent","useState","quote","setQuote","lastQuote","setLastQuote","getNewQuote","useEffect","author","onClick","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAUeA,EAVA,WACX,OACI,iCACI,8BACI,oBAAIC,UAAU,OAAd,6B,+CCFVC,EAAc,uCAAG,gCAAAC,EAAA,4DAEnB,wIAFmB,kBAIIC,IAAMC,IAF7B,yIAFmB,cAIbC,EAJa,gBAKAA,EAASC,KALT,cAKbA,EALa,OAMbC,EAAcD,EAAKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,SANtC,kBAOZJ,GAPY,gEASZK,GATY,0DAAH,qDAaLX,ICyCAY,EArDQ,WAMrB,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,qBAAlC,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,8BAAAjB,EAAA,kEACJU,IAAVG,GACFG,EAAaH,GAFG,SAICd,IAJD,cAIZK,EAJY,gBAKQA,EALR,OAKZC,EALY,OAMlBS,EAAST,GANS,2CAAH,qDAkBjB,OAJAa,qBAAU,WACRD,MACC,IAGD,sBAAKnB,UAAU,oBAAf,UACE,oDAEWY,IAAVG,EACC,sEAEA,sBAAKf,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAb,SAAsBe,EAAMA,QAC5B,mBAAGf,UAAU,SAAb,SAAuBe,EAAMM,YAGjC,gCACE,wBAAQC,QAASH,EAAjB,2BACA,wBACEnB,UAAU,UACVsB,QAzBa,WACnBN,EAASC,GACTC,OAAaN,IAwBPW,cAAwBX,IAAdK,EAHZ,uCChCOO,MATf,WACE,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFNyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.73f47772.chunk.js","sourcesContent":["const Header = ()=>{\r\n    return(\r\n        <header>\r\n            <div>\r\n                <h1 className=\"logo\">CoolQuotes</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst getRandomQuote = async () => {\r\n  const endpoint =\r\n    \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\";\r\n  try {\r\n    const response = await axios.get(endpoint);\r\n    const data = await response.data;\r\n    const randomQuote = data[Math.floor(Math.random() * data.length)];\r\n    return randomQuote;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport default getRandomQuote;","import { useEffect, useState } from \"react\";\r\nimport getRandomQuote from \"../utils/getRandomQuote\";\r\n\r\nconst QuoteComponent = () => {\r\n  interface quoteInterface {\r\n    quote: string;\r\n    author: string;\r\n  }\r\n\r\n  const [quote, setQuote] = useState<quoteInterface | undefined>();\r\n  const [lastQuote, setLastQuote] = useState<quoteInterface | undefined>();\r\n\r\n  const getNewQuote = async () => {\r\n    if (quote !== undefined) {\r\n      setLastQuote(quote);\r\n    }\r\n    const data = await getRandomQuote();\r\n    const randomQuote = await data;\r\n    setQuote(randomQuote);\r\n  };\r\n\r\n  const getLastQuote = () => {\r\n    setQuote(lastQuote);\r\n    setLastQuote(undefined);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNewQuote();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"section-container\">\r\n      <h2>Quote for you</h2>\r\n\r\n      {quote === undefined ? (\r\n        <p>Something gone wrong. Try again later</p>\r\n      ) : (\r\n        <div className=\"quote-container\">\r\n          <p className=\"quote\">{quote.quote}</p>\r\n          <p className=\"author\">{quote.author}</p>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <button onClick={getNewQuote}>Get new quote</button>\r\n        <button\r\n          className=\"outline\"\r\n          onClick={getLastQuote}\r\n          disabled={lastQuote === undefined}\r\n        >\r\n          Back to last quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteComponent;\r\n","import \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport QuoteComponent from './components/QuoteComponent';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <QuoteComponent />    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}